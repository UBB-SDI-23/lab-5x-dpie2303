version: '3'

services:
  db:
    build:
      context: .
      dockerfile: Dockerfile.db
    volumes:
      - ./data:/var/lib/postgresql/data
      - ./postgresql.conf:/etc/postgresql/postgresql.conf
      - ./sql_scripts:/sql_scripts
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}

  server:
    build:
      context: .
      dockerfile: Dockerfile.server
    volumes:
      - .:/app
    command: >
      bash -c "set -e &&
            #  python manage.py non_interactive_makemigrations &&
            #  python manage.py migrate &&
            #  python manage.py populate_db &&
            #  python manage.py collectstatic --no-input --clear &&
              gunicorn -b 0.0.0.0:8000 music_library.wsgi"
    depends_on:
      - db
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      - DJANGO_INTERACTIVE=no

  nginx:
    container_name: nginx
    image: nginx:latest
    environment:
      - DOMAIN
    depends_on:
      - server
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./etc/nginx/templates:/etc/nginx/templates:ro
      - ./etc/letsencrypt:/etc/letsencrypt:ro
      - ./certbot/data:/var/www/certbot
  certbot:
    container_name: certbot
    image: certbot/certbot:latest
    depends_on:
      - nginx
    command: >-
             certonly --reinstall --webroot --webroot-path=/var/www/certbot
             --email ${EMAIL} --agree-tos --no-eff-email
             -d ${DOMAIN}
    volumes:
      - ./etc/letsencrypt:/etc/letsencrypt
      - ./certbot/data:/var/www/certbot